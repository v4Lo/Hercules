// ==============================================================================
// BattleGround System - Common NPCs
// ==============================================================================

// MapFlags
// *********************************************************************

bat_room	mapflag	nomemo
bat_room	mapflag	nowarpto
bat_room	mapflag	nobranch
bat_room	mapflag	nopenalty
bat_room	mapflag	noteleport
bat_room	mapflag	nosave	SavePoint
// Mapflag Town is required to Join BG Queues
bat_room	mapflag	town

// Battleground Queue Admin
// *********************************************************************
-	script	BG_Queue_Join	-1,{
	end;

OnInit:
	// Configuration
	// *****************************************************
	// Battleground Rotation - Main NPC name
	setarray .BG_Arenas$[0],	     "Rush";
	// Battleground Arena Name - for announcements
	setarray .BG_Names$[0],		"Rush";
	// Minimum Players to start the BG
	setarray .BG_Min[0],	      1; //TODO Valo hÃ¶her als 6 implementieren wegen chatraum limitation
	// Maximum Players per Team
	setarray .BG_Max[0],	      30;
	// BG Message Colors
	setarray .BG_Color$[0],	       "0xDDA0DD";
	// Team Building Mode : 0 = Lineal | 1 = Random | 2 = Class Priority | 3 = Faction Mode | 4 = Team Color ( by script set Bat_Team,N; )
	set .TeamMode, 0;
	// Main Code
	// *****************************************************
	set .BG_Count, getarraysize(.BG_Arenas$);
	//set .BG_Queue, bg_queue_create("Battleground Arena","BG_Queue_Join::OnJoinEvent",80);
	// Move to Next Arena
	if( $BG_Index >= .BG_Count ) set $BG_Index,0; // Restart Rotation
	set .BG_Arena$,.BG_Arenas$[$BG_Index];
	set .Ready, 1;
	initnpctimer; // Rotation if BG don't start... Comment if you don't want to use this method

	// Comment the next two lines if you don't want to allow @joinbg and @leavebg commands
	end;

OnRotate:
OnTimer10000: // Rotation if BG don't start... Comment if you don't want to use this method. 120 = 2 Minutes
	set $@BG_Status, 0;
	// Warps Teams
	bg_warp $@BG_Team1,"prontera",156,191;
	bg_warp $@BG_Team2,"prontera",156,191;
	bg_warp $@BG_Team3,"prontera",156,191;
	// Destroy Teams
	bg_destroy $@BG_Team1; set $@BG_Team1, 0;
	bg_destroy $@BG_Team2; set $@BG_Team2, 0;
	bg_destroy $@BG_Team3; set $@BG_Team3, 0;

	// Move to Next Arena
	if( set($BG_Index,$BG_Index + 1) >= .BG_Count )
		set $BG_Index,0; // Restart Rotation

	set .BG_Arena$,.BG_Arenas$[$BG_Index];
	initnpctimer; // Rotation if BG don't start... Comment if you don't want to use this method

	// Trigger the Event - Maybe people is waiting...
OnJoinEvent:
	if( $@BG_Status == 2 )
		end; // BG Ending... Must wait until OnRotate is called

	set .@Queue_Count, getwaitingroomstate(0,"queuenpc1");
	announce .@Queue_Count + " in bg queue..", 0; // debug
	
	switch( $@BG_Status )
	{
	case 0: // Idle - Ready to Start
		announce "starting new bg..", 0; // debug
		if( .BG_Arena$ == "Tierra_TI" ) {
			set .@Req, .BG_Min[$BG_Index] * 3;
			set .@TeamNo, 3;
		} else {
			set .@Req, .BG_Min[$BG_Index] * 2;
			set .@TeamNo, 2;
		}
			
		if(.@Queue_Count >= .@Req)
		{
			announce "has enough member..", 0; // debug
			donpcevent .BG_Arena$ + "::OnBuildTeams";
			announce "built teams..", 0; // debug
			set $@BG_Team1_Size,0;
			set $@BG_Team2_Size,0;
			set $@BG_Team3_Size,0;
			
			// Fill Teams with Queue Members			
			for (.@i = 0; .@i < .@Req; ++.@i) {
				donpcevent "queuenpc1::OnPopPlayer";

				if( .@TeamNo == 3 ) {
					switch(rand(3)) {
						case 0:
							if($@BG_Team1_Size < .BG_Min[$BG_Index] ) {
								bg_join_team $@BG_Team1, $@warpwaitingpc[0];
								$@BG_Team1_Size++;
								break;
							}
						case 1:
							if($@BG_Team2_Size < .BG_Min[$BG_Index] ) {
								bg_join_team $@BG_Team2, $@warpwaitingpc[0];
								$@BG_Team2_Size++;
								break;
							}
						default:
							if($@BG_Team3_Size < .BG_Min[$BG_Index] ) {
								bg_join_team $@BG_Team3, $@warpwaitingpc[0];
								$@BG_Team3_Size++;
								break;
							}
							if($@BG_Team1_Size < .BG_Min[$BG_Index] ) {
								bg_join_team $@BG_Team1, $@warpwaitingpc[0];
								$@BG_Team1_Size++;
								break;
							}
							if($@BG_Team2_Size < .BG_Min[$BG_Index] ) {
								bg_join_team $@BG_Team2, $@warpwaitingpc[0];
								$@BG_Team2_Size++;
								break;
							}
							// wer braucht schon true random
					}
				} else {
					switch(rand(2)) {
						case 0:
							if($@BG_Team1_Size < .BG_Min[$BG_Index] ) {
								bg_join_team $@BG_Team1, $@warpwaitingpc[0];
								$@BG_Team1_Size++;
								break;
							}
						default:
							if($@BG_Team2_Size < .BG_Min[$BG_Index] ) {
								bg_join_team $@BG_Team2, $@warpwaitingpc[0];
								$@BG_Team2_Size++;
								break;
							}
							if(.@BG_Team1_Size < .BG_Min[$BG_Index] ) {
								bg_join_team $@BG_Team1, $@warpwaitingpc[0];
								$@BG_Team1_Size++;
								break;
							}
					}
				}
			}
			
			announce "added players to teams..",0;
			
			stopnpctimer; // Rotation if BG don't start... Comment if you don't want to use this method

			set $@BG_Status,1;
			set .@msg$, "Battleground -- " + .BG_Names$[$BG_Index] + " -- Beginning";
			announce .@msg$,0,.BG_Color$[$BG_Index]; //bgannounce ?!

			donpcevent .BG_Arena$ + "::OnReady";
		}
		else
		{
			set .@msg$, "Battleground -- " + .BG_Names$[$BG_Index] + " -- " + (.@Req - .@Queue_Count) + " more players to start.";
			announce .@msg$,0,.BG_Color$[$BG_Index];
		}
		break;
	case 1: // Running - Others can join
		if( .@Queue_Count > 0 )
		{
			for (.@i = .@Queue_Count; .@i > 0; --.@i) {
				if( .@TeamNo == 3 )
				{
					if($@BG_Team1_Size < $@BG_Team2_Size && $@BG_Team1_Size < $@BG_Team3_Size) {
						donpcevent "queuenpc1::OnPopPlayer";
						--.@i;
						bg_join_team $@BG_Team1, $@warpwaitingpc[0];
						$@BG_Team1_Size++;
					} else if($@BG_Team2_Size < $@BG_Team1_Size && $@BG_Team2_Size < $@BG_Team3_Size) {
						donpcevent "queuenpc1::OnPopPlayer";
						--.@i;
						bg_join_team $@BG_Team2, $@warpwaitingpc[0];
						$@BG_Team2_Size++;
					} else if($@BG_Team3_Size < $@BG_Team1_Size && $@BG_Team3_Size < $@BG_Team2_Size) {
						donpcevent "queuenpc1::OnPopPlayer";
						--.@i;
						bg_join_team $@BG_Team3, $@warpwaitingpc[0];
						$@BG_Team3_Size++;
					} else if(.@i >= 3 && $@BG_Team1_Size < .BG_Max[$BG_Index]) {
						donpcevent "queuenpc1::OnPopPlayer";
						--.@i;
						bg_join_team $@BG_Team1, $@warpwaitingpc[0];
						$@BG_Team1_Size++;
						donpcevent "queuenpc1::OnPopPlayer";
						--.@i;
						bg_join_team $@BG_Team2, $@warpwaitingpc[0];
						$@BG_Team2_Size++;
						donpcevent "queuenpc1::OnPopPlayer";
						--.@i;
						bg_join_team $@BG_Team3, $@warpwaitingpc[0];
						$@BG_Team3_Size++;
						
					}
					set $@BG_Team1_Size, bg_get_data($@BG_Team1,0);
					set $@BG_Team2_Size, bg_get_data($@BG_Team2,0);
					set $@BG_Team3_Size, bg_get_data($@BG_Team3,0);
					//set .@msg$, "Battleground -- " + .BG_Names$[$BG_Index] + " -- B: " + .@BG_Count1 + "/" + .BG_Max[$BG_Index] + ", R: " + .@BG_Count2 + "/" + .BG_Max[$BG_Index] + ", G: " + .@BG_Count3 + "/" + .BG_Max[$BG_Index] + " (Playing)";
				}
				else
				{
					if($@BG_Team1_Size < $@BG_Team2_Size) {
						donpcevent "queuenpc1::OnPopPlayer";
						--.@i;
						bg_join_team $@BG_Team1, $@warpwaitingpc[0];
						$@BG_Team1_Size++;
					} else if($@BG_Team2_Size < $@BG_Team1_Size) {
						donpcevent "queuenpc1::OnPopPlayer";
						--.@i;
						bg_join_team $@BG_Team2, $@warpwaitingpc[0];
						$@BG_Team2_Size++;
					} else if(.@i >= 2 && $@BG_Team1_Size < .BG_Max[$BG_Index]) {
						donpcevent "queuenpc1::OnPopPlayer";
						--.@i;
						bg_join_team $@BG_Team1, $@warpwaitingpc[0];
						$@BG_Team1_Size++;
						donpcevent "queuenpc1::OnPopPlayer";
						--.@i;
						bg_join_team $@BG_Team2, $@warpwaitingpc[0];
						$@BG_Team2_Size++;
					}
					//set .@msg$, "Battleground -- " + .BG_Names$[$BG_Index] + " -- B: " + .@BG_Count1 + "/" + .BG_Max[$BG_Index] + ", R: " + .@BG_Count2 + "/" + .BG_Max[$BG_Index] + " (Playing)";
				}
			}
			


			//bgannounce .@msg$,.BG_Color$[$BG_Index];
		}
		break;
	}
	end;
}

// General Guillaume
// *********************************************************************
bat_room,160,159,3	script	General Guillaume::queuenpc1	420,{
	cutin "bat_kiyom2",2;
	mes "[General Guillaume]";
	mes "Hot-blooded adventurer, we need your ability to win this battle.";
	next;
	cutin "bat_kiyom1",2;
	mes "[General Guillaume]";
	mes "Our great king, Marcel Marollo VII, is very sick lately. His Majesty has declared that he chosen either me or Prince Croix as the next king amongst his 9 sons.";
	next;
	mes "[General Guillaume]";
	mes "Two kings can't share a nation!";
	mes "Only the one victorious from His Majesty's appointed battle will be enthroned.";
	close2;
	cutin "",255;
	end;
OnInit:
//*waitingroom "<chatroom name>",<limit>{,<event label>,<trigger>,<required zeny>,<min lvl>,<max lvl>};
	waitingroom "Battleground Queue", 20, "BG_Queue_Join:OnJoinEvent", 1, 0, 80, 99; //TODO mehr spieler
end;
OnPopPlayer:
	warpwaitingpc "-1",0,0,1;
end;
}



// General Croix
// *********************************************************************
bat_room,160,140,3	script	Prince Croix	416,{
	cutin "bat_crua1",2;
	mes "[Prince Croix]";
	mes "Wise adventurer, why don't you lend us your power for victory?";
	next;
	cutin "bat_crua2",2;
	mes "[Prince Croix]";
	mes "I do not wish to shed blood, but I have no choice but to fight for the possibility of peace and for the sake of my people.";
	next;
	mes "[Prince Croix]";
	mes "queuenpc1 may have an advantage in this battle as he is the great general of Maroll, but that doesn't automatically mean he'll win. I want to win this battle so that I can grant a better future for my people.";
	next;
	
	close2;
	cutin "",255;
	end;
}
// Flags
// *********************************************************************

-	script	Base Flag#bg	-1,{ end; }

// BattleGround Warper - Exit
// *********************************************************************
// TODO Valo Add kafra here