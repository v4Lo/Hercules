//===== Hercules Script ======================================
//= Battleground Team Deathmatch
-	script	BG_TD	-1,{
	end;

OnGuillaumeQuit:
OnGuillaumeDie:
	if( .BG_Status == 1 )
	{
		set .Guillaume_Score, .Guillaume_Score - 1;
		donpcevent "BG_TD::OnValidateScore";
	}
	end;

OnCroixQuit:
OnCroixDie:
	if( .BG_Status == 1 )
	{
		set .Croix_Score, .Croix_Score - 1;
		donpcevent "BG_TD::OnValidateScore";
	}
	end;

OnBuildTeams:
	set $@BG_TDt1,bg_create_team("bat_b03",390,10,0,"BG_TD::OnGuillaumeQuit","BG_TD::OnGuillaumeDie");
	set $@BG_TDt2,bg_create_team("bat_b03",10,290,1,"BG_TD::OnCroixQuit","BG_TD::OnCroixDie");
	end;

OnReady:
	initnpctimer;
	.BG_Status = 1;
	.max_score = (queuesize($@BG_TDq1) + queuesize($@BG_TDq2)) * 3;
	if(.max_score > 99) {
		.max_score = 99;
	}
	set .Guillaume_Score, .max_score;
	set .Croix_Score, .max_score;
	bg_updatescore "bat_b03",.Guillaume_Score,.Croix_Score;
	sleep 2000;
	bg_warp $@BG_TDt1,"bat_b03",328,150;
	bg_warp $@BG_TDt2,"bat_b03",62,150;
	sleep 2000;
	bg_team_reveal $@BG_TDt1;
	bg_team_reveal $@BG_TDt2;
	donpcevent "#guitd_respawn::OnBGStart";
	donpcevent "#crotd_respawn::OnBGStart";
	mapannounce "bat_b03","Welcome to Team Deathmatch. Each death is worth 1 point. First to reach 0 points loses this battle.",1,0x00FF00;
	end;

OnValidateScore:
	if( .BG_Status != 1 )
		end;

	bg_updatescore "bat_b03",.Guillaume_Score,.Croix_Score;
	set .@Guillaume, bg_get_data($@BG_TDt1, 0);
	set .@Croix, bg_get_data($@BG_TDt2, 0);

	if( .Croix_Score <= 0 )
	{ // Guillaume Won
		set .@t1r,5;
		set .@t2r,3;
		mapannounce "bat_b03","The Guillaume army has won the Team Deathmatch!",1,0x0000FF;
	}
	else if( .Guillaume_Score <= 0 )
	{ // Croix Won
		set .@t1r,3;
		set .@t2r,5;
		mapannounce "bat_b03","The Croix army has won the Team Deathmatch!",1,0xFF0000;
	}
	else if( .@Croix == 0 )
	{ // All Croix Players quit
		set .@Rate, .max_score - .Croix_Score;
		set .@t1r,5;
		set .@t2r,0;
		mapannounce "bat_b03","The Guillaume army has won the Team Deathmatch!",1,0x0000FF;
	}
	else if( .@Guillaume == 0 )
	{ // All Guillaume Players quit
		set .@Rate, .max_score - .Guillaume_Score;
		set .@t1r,0;
		set .@t2r,5;
		mapannounce "bat_b03","The Croix army has won the Team Deathmatch!",1,0xFF0000;
	}
	else end;
	.@rqitA = queueiterator($@BG_TDq1);
	.@rqitB = queueiterator($@BG_TDq2);

	$@bgFinishedPlayerCount = 0;
	
	while ((set(.currentRID, qinext(.@rqitA))) != 0) {
		attachrid .currentRID;
		$@bgFinishedPlayerCount++;
		setd("$onlyro_bgdelay_"+#master_id, gettimetick(2) + 10);
		getitem 7773,.@t1r;
		getitem 7829,2;
		detachrid;
	}

	while ((set(.currentRID, qinext(.@rqitB))) != 0) {
		attachrid .currentRID;
		$@bgFinishedPlayerCount++;
		setd("$onlyro_bgdelay_"+#master_id, gettimetick(2) + 10);
		getitem 7773,.@t2r;
		getitem 7829,2;
		detachrid;
	}
	
	qiclear(.@rqitA);
	qiclear(.@rqitB);
	queuedel($@BG_TDq1);
	queuedel($@BG_TDq2);

	donpcevent "BG_TD::OnMatchEnd";
	end;

OnTimer600000:
	mapannounce "bat_b03","The Battle will end in 5 minutes!",1,0x00FF00;
	end;

OnTimer840000:
	mapannounce "bat_b03","The Battle will end in 1 minute!",1,0x00FF00;
	end;

OnTimer900000:
	if( .Guillaume_Score > .Croix_Score )
	{ // Guillaume Won
		set .@t1r,5;
		set .@t2r,3;
		mapannounce "bat_b03","The Guillaume army has won the Team Deathmatch!",1,0x0000FF;
	}
	else if( .Guillaume_Score < .Croix_Score )
	{ // Croix Won
		set .@t1r,3;
		set .@t2r,5;
		mapannounce "bat_b03","The Croix army has won the Team Deathmatch!",1,0xFF0000;
	}
	else
	{
		set .@t1r,4;
		set .@t2r,4;
		mapannounce "bat_b03","The battle ended in a draw.",1,0x808000;
	}
	.@rqitA = queueiterator($@BG_TDq1);
	.@rqitB = queueiterator($@BG_TDq2);

	$@bgFinishedPlayerCount = 0;
	
	while ((set(.currentRID, qinext(.@rqitA))) != 0) {
		attachrid .currentRID;
		$@bgFinishedPlayerCount++;
		setd("$onlyro_bgdelay_"+#master_id, gettimetick(2) + 10);
		getitem 7773,.@t1r;
		detachrid;
	}

	while ((set(.currentRID, qinext(.@rqitB))) != 0) {
		attachrid .currentRID;
		$@bgFinishedPlayerCount++;
		setd("$onlyro_bgdelay_"+#master_id, gettimetick(2) + 10);
		getitem 7773,.@t2r;
		detachrid;
	}
	
	qiclear(.@rqitA);
	qiclear(.@rqitB);
	queuedel($@BG_TDq1);
	queuedel($@BG_TDq2);
	donpcevent "BG_TD::OnMatchEnd";
	end;

OnMatchEnd:
	stopnpctimer;
	donpcevent "#guitd_respawn::OnBGStop";
	donpcevent "#crotd_respawn::OnBGStop";
	set .BG_Status, 2;
	set .Guillaume_Score, .max_score;
	set .Croix_Score, .max_score;
	sleep 5000;
	bg_warp $@BG_TDt1,"SavePoint",0,0;
	bg_warp $@BG_TDt2,"SavePoint",0,0;
	sleep 3000;
	bg_destroy $@BG_TDt1;
	set $@BG_TDt1, 0;
	bg_destroy $@BG_TDt2;
	set $@BG_TDt2, 0;
	$@bg_type_ext$ = "BG_TD";
	donpcevent "bg_queue::OnHasBGFinished";
	bg_updatescore "bat_b03",.max_score,.max_score;
	end;
}

// Battleground Therapist
// *********************************************************************

bat_b03,390,13,5	script	Battlefield Surgeon#td1	95,{
	specialeffect2 312;
	skilleffect 34,0;
	skilleffect 29,0;
	percentheal 100,100;
	sc_start SC_BLESSING,300000,10;
	sc_start SC_INC_AGI,300000,10;
	repairall;
	end;

}

bat_b03,10,293,5	script	Battlefield Surgeon#td2	95,{
	specialeffect2 312;
	skilleffect 34,0;
	skilleffect 29,0;
	percentheal 100,100;
	sc_start SC_BLESSING,300000,10;
	sc_start SC_INC_AGI,300000,10;
	repairall;
	end;

}

// Battleground Respawn
// *********************************************************************

bat_b03,390,10,0	script	#guitd_respawn	139,{
	end;

OnBGStart:
	initnpctimer;
	end;

OnBGStop:
	stopnpctimer;
	end;

OnTimer24000:
	misceffect 83;
	end;

OnTimer25000:
	areapercentheal "bat_b03",382,2,397,17,100,100;
	areawarp "bat_b03",382,2,397,17,"bat_b03",306,138,327,161;
	initnpctimer;
	end;
}

bat_b03,10,290,0	script	#crotd_respawn	139,{
	end;

OnBGStart:
	initnpctimer;
	end;

OnBGStop:
	stopnpctimer;
	end;

OnTimer24000:
	misceffect 83;
	end;

OnTimer25000:
	areapercentheal "bat_b03",2,282,17,297,100,100;
	areawarp "bat_b03",2,282,17,297,"bat_b03",72,138,93,161;
	initnpctimer;
	end;
}

// Flags
// *********************************************************************


// MapFlags
// *********************************************************************

bat_b03	mapflag	battleground	2
bat_b03	mapflag	nomemo
bat_b03	mapflag	nosave	SavePoint
bat_b03	mapflag	noteleport
bat_b03	mapflag	nowarp
bat_b03	mapflag	nowarpto
bat_b03	mapflag	noreturn
bat_b03	mapflag	nobranch
bat_b03	mapflag	nopenalty
bat_b03	mapflag	loadevent